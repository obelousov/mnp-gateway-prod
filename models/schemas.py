from pydantic import BaseModel, Field
from typing import Optional, Dict, Any
from datetime import datetime
from enum import Enum

class QueryType(str, Enum):
    BASIC = "basic"
    DETAILED = "detailed"
    FULL = "full"

class MsisdnQueryRequest(BaseModel):
    msisdn: str = Field(..., description="Mobile number to query", example="254712345678")
    query_type: QueryType = Field(default=QueryType.BASIC, description="Type of query")
    bss_reference: Optional[str] = Field(None, description="BSS internal reference ID")
    additional_params: Optional[Dict[str, Any]] = Field(default_factory=dict)

class MsisdnQueryResponse(BaseModel):
    request_id: str = Field(..., description="Unique request ID generated by MNP Gateway")
    msisdn: str = Field(..., description="Queried mobile number")
    status: str = Field(..., description="Processing status")
    timestamp: datetime = Field(..., description="Response timestamp")
    portability_info: Optional[str] = Field(None, description="Portability details")
    donor_operator: Optional[str] = Field(None, description="Original operator")
    recipient_operator: Optional[str] = Field(None, description="Current operator")
    portability_status: Optional[str] = Field(None, description="PORTED/NOT_PORTED")
    error_message: Optional[str] = Field(None, description="Error details if any")

class QueryStatus(BaseModel):
    request_id: str
    status: str
    created_at: datetime
    updated_at: datetime
    soap_response_received: bool
    error_message: Optional[str]